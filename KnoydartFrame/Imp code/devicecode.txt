/*
 * Copyright (C) 2015 Hadi Mehrpouya
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

////////////////////////////////////////
// Global Variables                   //
////////////////////////////////////////
local rxLEDToggle = 1;  // These variables keep track of rx/tx LED state
local txLEDToggle = 1;
arduino <- hardware.uart57;
//arduino <- hardware.uart12;
rxLed <- hardware.pin7;
txLed <- hardware.pin8;


////////////////////////////////////////
// Function definitions               //
////////////////////////////////////////
// initUart() will simply initialize the UART pins, baud rate, parity, and
//  callback function.
function initUart()
{
   hardware.configure(UART_57);    // Using UART on pins 5 and 7
   //hardware.configure(UART_12);    // Using UART on pins 1 and 2
   // 19200 baud works well, no parity, 1 stop bit, 8 data bits.
   // Provide a callback function, serialRead, to be called when data comes in:
   arduino.configure(19200, 8, PARITY_NONE, 1, NO_CTSRTS)//, serialRead);
}
/*
function serialRead()
{
   local c = arduino.read(); // Read serial char into variable c
   while(c != -1) // Loop until no valid characters are read:
   {
       // Send 'c' to the agent, under the label "impSerialIn":
       agent.send("impSerialIn", c);
       toggleRxLED();  // toggle the RX LED indicator
       c = arduino.read(); // Read more, just in case.
   }
}
*/
// agent.on("dataToSerial") will be called whenever the agent passes data labeled
//  "dataToSerial" over to the device. This data should be sent out the serial
//  port, to the Arduino.


// initLEDs() simply initializes the LEDs, and turns them off. Remember that the
// LEDs are active low (writing high turns them off).
function initLEDs()
{
   // LEDs are on pins 8 and 9 on the imp Shield. Configure them as outputs,
   //  and turn them off:
   rxLed.configure(DIGITAL_OUT);
   txLed.configure(DIGITAL_OUT);
   rxLed.write(1);
   txLed.write(1);
}

// This function turns an LED on/off quickly on pin 9.
// It first turns the LED on, then calls itself again in 50ms to turn the LED off
function toggleTxLED()
{
   txLEDToggle = txLEDToggle?0:1;    // toggle the txLEDtoggle variable
   if (!txLEDToggle)
   {
       imp.wakeup(0.05, toggleTxLED.bindenv(this)); // if we're turning the LED on, set a timer to call this function again (to turn the LED off)
   }
   txLed.write(txLEDToggle);  // TX LED is on pin 8 (active-low)
}

// This function turns an LED on/off quickly on pin 8.
// It first turns the LED on, then calls itself again in 50ms to turn the LED off
function toggleRxLED()
{
   rxLEDToggle = rxLEDToggle?0:1;    // toggle the rxLEDtoggle variable
   if (!rxLEDToggle)
   {
       imp.wakeup(0.05, toggleRxLED.bindenv(this)); // if we're turning the LED on, set a timer to call this function again (to turn the LED off)
   }
   rxLed.write(rxLEDToggle);   // RX LED is on pin 8 (active-low)
}

///////////
// Setup //
///////////
server.log("Serial Pipeline Open!"); // A warm greeting to indicate we've begun
initLEDs(); // Initialize the LEDs
initUart(); // Initialize the UART
// From here, all of our main action will take place in serialRead() and the
// agent.on functions. It's all event-driven.
//agent.on("sense", initUart);
//agent.on("json", function(value)


agent.on("val", function(value)
{
    server.log ("wrote: " + value);
   //local type = value.typeof();
   //server.log ("type: " + value.typeof();
   arduino.write(value); // Write the data out the serial port.
   //arduino.write(100);
   
   toggleTxLED(); // Toggle the TX LED indicator
});

